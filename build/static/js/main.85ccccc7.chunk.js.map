{"version":3,"sources":["components/Map.tsx","components/Waypoint.tsx","components/RouteBuilder.tsx","App.tsx","index.tsx"],"names":["Map","initialGeolocation","waypoints","onMapClicked","mapContainerRef","useRef","useState","leafletMap","setLeafletMap","markersLayerGroupRef","polylinesLayerGroupRef","useEffect","current","map","L","setView","lng","lat","tileLayer","maxZoom","attribution","addTo","on","event","latlng","clearAllEventListeners","markers","waypoint","i","marker","latLng","icon","divIcon","className","html","coordinates","polylines","polyline","color","clearLayers","markersLayerGroup","layerGroup","polylinesLayerGroup","ref","Wrapper","styled","div","LeftIcon","Label","RightIcon","Waypoint","index","onDeleteMarkerClicked","onDragStart","onDragEnter","draggable","onDragOver","e","preventDefault","size","label","onClick","TitleSection","WaypointsWrapper","NoWaypointsMessage","DownloadSection","DownloadButton","button","RouteBuilder","onSwapWaypoints","draggingItemIndexRef","targetItemIndexRef","handleDragStarted","handleDragEntered","undefined","length","disabled","Point","GarminBuilder","MODELS","points","gpxData","setSegmentPoints","blob","Blob","buildGPX","toObject","type","url","URL","createObjectURL","tempLink","document","createElement","href","download","click","StyledApp","StyledSidebar","StyledContent","App","setWaypoints","Provider","value","style","verticalAlign","indexA","indexB","waypointsCopy","waypointA","splice","filter","_","prevWaypoints","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.85ccccc7.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport L, { LeafletMouseEvent } from \"leaflet\";\nimport { Waypoint } from \"../App\";\n\ninterface MapProps {\n  initialGeolocation: { lat: number; lng: number };\n  waypoints: Waypoint[];\n  onMapClicked: ({ lat, lng }: { lat: number; lng: number }) => void;\n}\n\nexport function Map({ initialGeolocation, waypoints, onMapClicked }: MapProps) {\n  // We need a reference to the HTML Element in order to initialize our Map.\n  const mapContainerRef = useRef<HTMLDivElement>(null);\n  const [leafletMap, setLeafletMap] = useState<L.Map>();\n\n  const markersLayerGroupRef = useRef<L.LayerGroup>();\n  const polylinesLayerGroupRef = useRef<L.LayerGroup>();\n\n  useEffect(() => {\n    if (mapContainerRef.current) {\n      const map = L.map(mapContainerRef.current).setView(\n        [initialGeolocation.lng, initialGeolocation.lat],\n        15\n      );\n\n      L.tileLayer(\"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png\", {\n        maxZoom: 17,\n        attribution:\n          'Map data: &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, <a href=\"http://viewfinderpanoramas.org\">SRTM</a> | Map style: &copy; <a href=\"https://opentopomap.org\">OpenTopoMap</a> (<a href=\"https://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA</a>)',\n      }).addTo(map);\n\n      map.on(\"click\", (event: LeafletMouseEvent) => {\n        onMapClicked({ lat: event.latlng.lat, lng: event.latlng.lng });\n      });\n\n      setLeafletMap(map);\n    }\n\n    return () => {\n      leafletMap?.clearAllEventListeners();\n    };\n    // only initialize the map once\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (leafletMap) {\n      const markers = waypoints.map((waypoint, i) =>\n        L.marker(L.latLng(waypoint.lat, waypoint.lng), {\n          icon: L.divIcon({\n            className: \"map-marker\",\n            html: `<span>${i + 1}</span>`,\n          }),\n        })\n      );\n\n      const coordinates = waypoints.map((waypoint) =>\n        L.latLng(waypoint.lat, waypoint.lng)\n      );\n\n      const polylines = [L.polyline(coordinates, { color: \"#055ff0\" })];\n\n      if (markersLayerGroupRef.current) {\n        markersLayerGroupRef.current.clearLayers();\n      }\n      const markersLayerGroup = L.layerGroup(markers);\n      markersLayerGroup.addTo(leafletMap);\n      markersLayerGroupRef.current = markersLayerGroup;\n\n      if (polylinesLayerGroupRef.current) {\n        polylinesLayerGroupRef.current.clearLayers();\n      }\n      const polylinesLayerGroup = L.layerGroup(polylines);\n      polylinesLayerGroup.addTo(leafletMap);\n      polylinesLayerGroupRef.current = polylinesLayerGroup;\n    }\n  }, [leafletMap, waypoints]);\n\n  return <div ref={mapContainerRef} className=\"map-container\"></div>;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FaTrash } from \"react-icons/fa\";\nimport { GiHamburgerMenu } from \"react-icons/gi\";\nimport { Waypoint as IWaypoint } from \"../App\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 10px 0;\n  font-weight: 600;\n  cursor: move;\n`;\n\nconst LeftIcon = styled.div`\n  color: #7a7a7a;\n  margin-right: 5px;\n`;\n\nconst Label = styled.div`\n  color: #f0f0f0;\n`;\n\nconst RightIcon = styled.div`\n  color: #7a7a7a;\n  margin-left: auto;\n  cursor: pointer;\n`;\n\ninterface WaypointProps {\n  waypoint: IWaypoint;\n  index: number;\n  onDeleteMarkerClicked: (index: number) => void;\n  onDragStart: (index: number) => void;\n  onDragEnter: (index: number) => void;\n}\n\nexport function Waypoint({\n  waypoint,\n  index,\n  onDeleteMarkerClicked,\n  onDragStart,\n  onDragEnter,\n}: WaypointProps) {\n  return (\n    <>\n      <Wrapper\n        draggable\n        onDragStart={() => onDragStart(index)}\n        onDragEnter={() => onDragEnter(index)}\n        onDragOver={(e) => e.preventDefault()}\n      >\n        <LeftIcon>\n          <GiHamburgerMenu size={20} />\n        </LeftIcon>\n        <Label>{waypoint.label || `Waypoint ${index + 1}`}</Label>\n        <RightIcon>\n          <FaTrash size={20} onClick={() => onDeleteMarkerClicked(index)} />\n        </RightIcon>\n      </Wrapper>\n    </>\n  );\n}\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { buildGPX, GarminBuilder } from \"gpx-builder\";\nimport { Waypoint as IWaypoint } from \"../App\";\nimport { Waypoint } from \"./Waypoint\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  background-color: #4a4a4a;\n  padding: 15px;\n  box-sizing: border-box;\n`;\n\nconst TitleSection = styled.div`\n  font-size: 24px;\n  font-weight: 700;\n  padding-bottom: 15px;\n  color: #f0f0f0;\n  border-bottom: 3px solid #5e5e5e;\n`;\n\nconst WaypointsWrapper = styled.div`\n  margin-top: 40px;\n  height: 100%;\n  overflow-y: auto;\n`;\n\nconst NoWaypointsMessage = styled.div`\n  font-weight: 600;\n  color: #f0f0f0;\n`;\n\nconst DownloadSection = styled.div`\n  height: 100px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DownloadButton = styled.button`\n  background-color: #b8de50;\n  width: 100%;\n  height: 50px;\n  border-radius: 8px;\n  border-width: 0;\n  color: #4a4a4a;\n  font-weight: 700;\n  font-size: 18px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  :hover {\n    background-color: #a4cc35;\n  }\n  :disabled {\n    background-color: #7a7a7a;\n    cursor: not-allowed;\n  }\n  :active {\n    background-color: #7b9928;\n  }\n`;\n\ninterface RouteBuilderProps {\n  waypoints: IWaypoint[];\n  onDeleteMarkerClicked: (index: number) => void;\n  onSwapWaypoints: (indexA: number, indexB: number) => void;\n}\n\nexport function RouteBuilder({\n  waypoints,\n  onDeleteMarkerClicked,\n  onSwapWaypoints,\n}: RouteBuilderProps) {\n  const draggingItemIndexRef = useRef<number>();\n  const targetItemIndexRef = useRef<number>();\n\n  const handleDragStarted = (index: number) => {\n    draggingItemIndexRef.current = index;\n  };\n\n  const handleDragEntered = (index: number) => {\n    targetItemIndexRef.current = index;\n\n    if (draggingItemIndexRef.current !== undefined) {\n      onSwapWaypoints(draggingItemIndexRef.current, targetItemIndexRef.current);\n      draggingItemIndexRef.current = targetItemIndexRef.current;\n      targetItemIndexRef.current = undefined;\n    }\n  };\n\n  const handleDownloadButtonClicked = () => {\n    const { Point } = GarminBuilder.MODELS;\n\n    const points = waypoints.map(\n      (waypoint) => new Point(waypoint.lat, waypoint.lng)\n    );\n\n    const gpxData = new GarminBuilder();\n\n    gpxData.setSegmentPoints(points);\n\n    const blob = new Blob([buildGPX(gpxData.toObject())], { type: \"text/gpx\" });\n    const url = URL.createObjectURL(blob);\n\n    const tempLink = document.createElement(\"a\");\n    tempLink.href = url;\n    tempLink.download = \"route.gpx\";\n    tempLink.click();\n  };\n\n  return (\n    <Wrapper>\n      <TitleSection>Route Builder</TitleSection>\n      <WaypointsWrapper>\n        {waypoints.length ? (\n          waypoints.map((waypoint, index) => (\n            <Waypoint\n              onDeleteMarkerClicked={onDeleteMarkerClicked}\n              onDragEnter={handleDragEntered}\n              onDragStart={handleDragStarted}\n              key={index}\n              waypoint={waypoint}\n              index={index}\n            />\n          ))\n        ) : (\n          <NoWaypointsMessage>\n            Click on the Map to create your first Waypoint.\n          </NoWaypointsMessage>\n        )}\n      </WaypointsWrapper>\n      <DownloadSection>\n        <DownloadButton\n          disabled={waypoints.length === 0}\n          onClick={handleDownloadButtonClicked}\n        >\n          Download your Route\n        </DownloadButton>\n      </DownloadSection>\n    </Wrapper>\n  );\n}\n","import React, { useState } from \"react\";\nimport { IconContext } from \"react-icons\";\nimport styled from \"styled-components\";\nimport { Map, RouteBuilder } from \"./components\";\n\nconst StyledApp = styled.div`\n  display: flex;\n  height: 100vh;\n  width: 100vw;\n`;\n\nconst StyledSidebar = styled.div`\n  width: 500px;\n  height: 100%;\n`;\n\nconst StyledContent = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  background-color: blue;\n`;\n\nexport interface Waypoint {\n  label?: string;\n  lat: number;\n  lng: number;\n}\n\nconst initialGeolocation = {\n  lat: 13.836687559660044,\n  lng: 46.37799438996954,\n};\n\nfunction App() {\n  const [waypoints, setWaypoints] = useState<Waypoint[]>([]);\n\n  const handleSwapWaypoints = (indexA: number, indexB: number) => {\n    const waypointsCopy = [...waypoints];\n    const waypointA = waypointsCopy[indexA];\n    waypointsCopy.splice(indexA, 1);\n    waypointsCopy.splice(indexB, 0, waypointA);\n\n    setWaypoints(waypointsCopy);\n  };\n\n  const handleMapClicked = (waypoint: Waypoint) => {\n    setWaypoints((prevWaypoints) => [...prevWaypoints, waypoint]);\n  };\n\n  const handleDeleteMarker = (index: number) => {\n    setWaypoints(waypoints.filter((_, i) => i !== index));\n  };\n\n  return (\n    <IconContext.Provider value={{ style: { verticalAlign: \"middle\" } }}>\n      <StyledApp>\n        <StyledSidebar>\n          <RouteBuilder\n            waypoints={waypoints}\n            onSwapWaypoints={handleSwapWaypoints}\n            onDeleteMarkerClicked={handleDeleteMarker}\n          />\n        </StyledSidebar>\n\n        <StyledContent>\n          <Map\n            initialGeolocation={initialGeolocation}\n            waypoints={waypoints}\n            onMapClicked={handleMapClicked}\n          />\n        </StyledContent>\n      </StyledApp>\n    </IconContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './index.css';\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}